|registerfile
clock4 => and_gate:AND4.in1
clock4 => and_gate:AND3.in1
clock4 => and_gate:AND2.in1
clock4 => and_gate:AND1.in1
w_addr[0] => decoder:DEC.i[0]
w_addr[1] => decoder:DEC.i[1]
datain[0] => reg:R4.d[0]
datain[0] => reg:R3.d[0]
datain[0] => reg:R2.d[0]
datain[0] => reg:R1.d[0]
datain[1] => reg:R4.d[1]
datain[1] => reg:R3.d[1]
datain[1] => reg:R2.d[1]
datain[1] => reg:R1.d[1]
datain[2] => reg:R4.d[2]
datain[2] => reg:R3.d[2]
datain[2] => reg:R2.d[2]
datain[2] => reg:R1.d[2]
datain[3] => reg:R4.d[3]
datain[3] => reg:R3.d[3]
datain[3] => reg:R2.d[3]
datain[3] => reg:R1.d[3]
r_addr_a[0] => multiplexer4:MUXA.s[0]
r_addr_a[1] => multiplexer4:MUXA.s[1]
r_addr_b[0] => multiplexer4:MUXB.s[0]
r_addr_b[1] => multiplexer4:MUXB.s[1]
dataouta[0] <= multiplexer4:MUXA.o[0]
dataouta[1] <= multiplexer4:MUXA.o[1]
dataouta[2] <= multiplexer4:MUXA.o[2]
dataouta[3] <= multiplexer4:MUXA.o[3]
dataoutb[0] <= multiplexer4:MUXB.o[0]
dataoutb[1] <= multiplexer4:MUXB.o[1]
dataoutb[2] <= multiplexer4:MUXB.o[2]
dataoutb[3] <= multiplexer4:MUXB.o[3]


|registerfile|decoder:DEC
i[0] => Mux3.IN5
i[0] => Mux2.IN5
i[0] => Mux1.IN5
i[0] => Mux0.IN5
i[1] => Mux3.IN4
i[1] => Mux2.IN4
i[1] => Mux1.IN4
i[1] => Mux0.IN4
o[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|and_gate:AND1
in0 => o~0.IN0
in1 => o~0.IN1
o <= o~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|and_gate:AND2
in0 => o~0.IN0
in1 => o~0.IN1
o <= o~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|and_gate:AND3
in0 => o~0.IN0
in1 => o~0.IN1
o <= o~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|and_gate:AND4
in0 => o~0.IN0
in1 => o~0.IN1
o <= o~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R1|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R1|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R1|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R1|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R1|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R1|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R1|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R1|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R1|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R1|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R2|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R2|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R2|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R2|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R2|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R2|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R2|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R2|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R2|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R2|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R2|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R2|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R2|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R2|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R3|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R3|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R3|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R3|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R3|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R3|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R3|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R3|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R3|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R3|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R3|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R3|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R3|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R3|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R4|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R4|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R4|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R4|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R4|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R4|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R4|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R4|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R4|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R4|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|registerfile|reg:R4|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|reg:R4|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|registerfile|reg:R4|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|reg:R4|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|registerfile|multiplexer4:MUXA
i3[0] => o[0]~0.DATAA
i3[1] => o[1]~3.DATAA
i3[2] => o[2]~6.DATAA
i3[3] => o[3]~9.DATAA
i2[0] => o[0]~0.DATAB
i2[1] => o[1]~3.DATAB
i2[2] => o[2]~6.DATAB
i2[3] => o[3]~9.DATAB
i1[0] => o[0]~1.DATAB
i1[1] => o[1]~4.DATAB
i1[2] => o[2]~7.DATAB
i1[3] => o[3]~11.DATAB
i0[0] => o[0]~2.DATAB
i0[1] => o[1]~5.DATAB
i0[2] => o[2]~8.DATAB
i0[3] => o[3]~13.DATAB
s[0] => process0~3.IN0
s[0] => process0~1.IN0
s[0] => process0~0.IN0
s[0] => process0~2.IN0
s[1] => process0~3.IN1
s[1] => process0~2.IN1
s[1] => process0~0.IN1
s[1] => process0~1.IN1
o[0] <= o[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= o[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= o[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


|registerfile|multiplexer4:MUXB
i3[0] => o[0]~0.DATAA
i3[1] => o[1]~3.DATAA
i3[2] => o[2]~6.DATAA
i3[3] => o[3]~9.DATAA
i2[0] => o[0]~0.DATAB
i2[1] => o[1]~3.DATAB
i2[2] => o[2]~6.DATAB
i2[3] => o[3]~9.DATAB
i1[0] => o[0]~1.DATAB
i1[1] => o[1]~4.DATAB
i1[2] => o[2]~7.DATAB
i1[3] => o[3]~11.DATAB
i0[0] => o[0]~2.DATAB
i0[1] => o[1]~5.DATAB
i0[2] => o[2]~8.DATAB
i0[3] => o[3]~13.DATAB
s[0] => process0~3.IN0
s[0] => process0~1.IN0
s[0] => process0~0.IN0
s[0] => process0~2.IN0
s[1] => process0~3.IN1
s[1] => process0~2.IN1
s[1] => process0~0.IN1
s[1] => process0~1.IN1
o[0] <= o[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= o[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= o[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


