|fast_adder
clock_50_mhz => adder:a.clock_50_mhz
en => adder:a.en
clock_user => registerfile_8_by_8:rf.clock4
data_user[0] => registerfile_8_by_8:rf.datain[0]
data_user[1] => registerfile_8_by_8:rf.datain[1]
data_user[2] => registerfile_8_by_8:rf.datain[2]
data_user[3] => registerfile_8_by_8:rf.datain[3]
data_user[4] => registerfile_8_by_8:rf.datain[4]
data_user[5] => registerfile_8_by_8:rf.datain[5]
data_user[6] => registerfile_8_by_8:rf.datain[6]
data_user[7] => registerfile_8_by_8:rf.datain[7]
address_user[0] => registerfile_8_by_8:rf.w_addr[0]
address_user[1] => registerfile_8_by_8:rf.w_addr[1]
address_user[2] => registerfile_8_by_8:rf.w_addr[2]
sev_seg_output_1[0] <= adder:a.output[8]
sev_seg_output_1[1] <= adder:a.output[9]
sev_seg_output_1[2] <= adder:a.output[10]
sev_seg_output_1[3] <= adder:a.output[11]
sev_seg_output_2[0] <= adder:a.output[4]
sev_seg_output_2[1] <= adder:a.output[5]
sev_seg_output_2[2] <= adder:a.output[6]
sev_seg_output_2[3] <= adder:a.output[7]
sev_seg_output_3[0] <= adder:a.output[0]
sev_seg_output_3[1] <= adder:a.output[1]
sev_seg_output_3[2] <= adder:a.output[2]
sev_seg_output_3[3] <= adder:a.output[3]


|fast_adder|registerfile_8_by_8:rf
clock4 => and_gate:AND8.in1
clock4 => and_gate:AND7.in1
clock4 => and_gate:AND6.in1
clock4 => and_gate:AND5.in1
clock4 => and_gate:AND4.in1
clock4 => and_gate:AND3.in1
clock4 => and_gate:AND2.in1
clock4 => and_gate:AND1.in1
w_addr[0] => decoder:DEC.i[0]
w_addr[1] => decoder:DEC.i[1]
w_addr[2] => decoder:DEC.i[2]
datain[0] => reg:R8.d[0]
datain[0] => reg:R7.d[0]
datain[0] => reg:R6.d[0]
datain[0] => reg:R5.d[0]
datain[0] => reg:R4.d[0]
datain[0] => reg:R3.d[0]
datain[0] => reg:R2.d[0]
datain[0] => reg:R1.d[0]
datain[1] => reg:R8.d[1]
datain[1] => reg:R7.d[1]
datain[1] => reg:R6.d[1]
datain[1] => reg:R5.d[1]
datain[1] => reg:R4.d[1]
datain[1] => reg:R3.d[1]
datain[1] => reg:R2.d[1]
datain[1] => reg:R1.d[1]
datain[2] => reg:R8.d[2]
datain[2] => reg:R7.d[2]
datain[2] => reg:R6.d[2]
datain[2] => reg:R5.d[2]
datain[2] => reg:R4.d[2]
datain[2] => reg:R3.d[2]
datain[2] => reg:R2.d[2]
datain[2] => reg:R1.d[2]
datain[3] => reg:R8.d[3]
datain[3] => reg:R7.d[3]
datain[3] => reg:R6.d[3]
datain[3] => reg:R5.d[3]
datain[3] => reg:R4.d[3]
datain[3] => reg:R3.d[3]
datain[3] => reg:R2.d[3]
datain[3] => reg:R1.d[3]
datain[4] => reg:R8.d[4]
datain[4] => reg:R7.d[4]
datain[4] => reg:R6.d[4]
datain[4] => reg:R5.d[4]
datain[4] => reg:R4.d[4]
datain[4] => reg:R3.d[4]
datain[4] => reg:R2.d[4]
datain[4] => reg:R1.d[4]
datain[5] => reg:R8.d[5]
datain[5] => reg:R7.d[5]
datain[5] => reg:R6.d[5]
datain[5] => reg:R5.d[5]
datain[5] => reg:R4.d[5]
datain[5] => reg:R3.d[5]
datain[5] => reg:R2.d[5]
datain[5] => reg:R1.d[5]
datain[6] => reg:R8.d[6]
datain[6] => reg:R7.d[6]
datain[6] => reg:R6.d[6]
datain[6] => reg:R5.d[6]
datain[6] => reg:R4.d[6]
datain[6] => reg:R3.d[6]
datain[6] => reg:R2.d[6]
datain[6] => reg:R1.d[6]
datain[7] => reg:R8.d[7]
datain[7] => reg:R7.d[7]
datain[7] => reg:R6.d[7]
datain[7] => reg:R5.d[7]
datain[7] => reg:R4.d[7]
datain[7] => reg:R3.d[7]
datain[7] => reg:R2.d[7]
datain[7] => reg:R1.d[7]
r_addr[0] => multiplexer8:MUXA.s[0]
r_addr[1] => multiplexer8:MUXA.s[1]
r_addr[2] => multiplexer8:MUXA.s[2]
dataout[0] <= multiplexer8:MUXA.o[0]
dataout[1] <= multiplexer8:MUXA.o[1]
dataout[2] <= multiplexer8:MUXA.o[2]
dataout[3] <= multiplexer8:MUXA.o[3]
dataout[4] <= multiplexer8:MUXA.o[4]
dataout[5] <= multiplexer8:MUXA.o[5]
dataout[6] <= multiplexer8:MUXA.o[6]
dataout[7] <= multiplexer8:MUXA.o[7]


|fast_adder|registerfile_8_by_8:rf|decoder:DEC
i[0] => Equal0.IN0
i[0] => Equal1.IN2
i[0] => Equal2.IN0
i[0] => Equal3.IN1
i[0] => Equal4.IN0
i[0] => Equal5.IN1
i[0] => Equal6.IN0
i[0] => Equal7.IN0
i[1] => Equal0.IN1
i[1] => Equal1.IN0
i[1] => Equal2.IN2
i[1] => Equal3.IN2
i[1] => Equal4.IN1
i[1] => Equal5.IN0
i[1] => Equal6.IN1
i[1] => Equal7.IN1
i[2] => Equal0.IN2
i[2] => Equal1.IN1
i[2] => Equal2.IN1
i[2] => Equal3.IN0
i[2] => Equal4.IN2
i[2] => Equal5.IN2
i[2] => Equal6.IN2
i[2] => Equal7.IN2
o[0] <= o[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= o[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= o[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= o[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= o[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= o[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[7] <= o[7]$latch.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND1
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND2
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND3
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND4
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND5
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND6
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND7
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|and_gate:AND8
in0 => process0~0.IN0
in1 => process0~0.IN1
o <= process0~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R1|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R2|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R3|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R4|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R5|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R6|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R7|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8
d[0] => d_flip_flop_en:r0.d
d[1] => d_flip_flop_en:r1.d
d[2] => d_flip_flop_en:r2.d
d[3] => d_flip_flop_en:r3.d
d[4] => d_flip_flop_en:r4.d
d[5] => d_flip_flop_en:r5.d
d[6] => d_flip_flop_en:r6.d
d[7] => d_flip_flop_en:r7.d
clock => d_flip_flop_en:r7.clock
clock => d_flip_flop_en:r6.clock
clock => d_flip_flop_en:r5.clock
clock => d_flip_flop_en:r4.clock
clock => d_flip_flop_en:r3.clock
clock => d_flip_flop_en:r2.clock
clock => d_flip_flop_en:r1.clock
clock => d_flip_flop_en:r0.clock
q[0] <= q~7.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q~6.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q~5.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q~4.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q~3.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q~2.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q~1.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q~0.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r0
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r0|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r0|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r0|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r0|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r1
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r1|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r1|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r1|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r1|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r2
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r2|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r2|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r2|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r2|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r3
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r3|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r3|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r3|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r3|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r4
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r4|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r4|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r4|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r4|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r5
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r5|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r5|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r5|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r5|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r6
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r6|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r6|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r6|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r6|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r7
d => mux_2_to_1:enable.i0
en => mux_2_to_1:enable.s
clock => master_slave:d_ff.clock
q <= master_slave:d_ff.q
notq <= master_slave:d_ff.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r7|mux_2_to_1:enable
i0 => output~0.IN0
i1 => output~1.IN1
s => output~0.IN1
s => output~1.IN0
output <= output~2.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r7|master_slave:d_ff
clock => d_latch:slave.c
clock => d_latch:master.c
d => d_latch:master.d
q <= d_latch:slave.q
qnot <= d_latch:slave.qnot


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r7|master_slave:d_ff|d_latch:master
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|reg:R8|d_flip_flop_en:r7|master_slave:d_ff|d_latch:slave
c => qnot~0.IN1
c => q~0.IN1
d => q~0.IN0
d => qnot~0.IN0
q <= comb~3
qnot <= comb~1


|fast_adder|registerfile_8_by_8:rf|multiplexer8:MUXA
i7[0] => o[0]~16.DATAA
i7[1] => o[1]~6.DATAA
i7[2] => o[2]~5.DATAA
i7[3] => o[3]~4.DATAA
i7[4] => o[4]~3.DATAA
i7[5] => o[5]~2.DATAA
i7[6] => o[6]~1.DATAA
i7[7] => o[7]~0.DATAA
i6[0] => o[0]~16.DATAB
i6[1] => o[1]~6.DATAB
i6[2] => o[2]~5.DATAB
i6[3] => o[3]~4.DATAB
i6[4] => o[4]~3.DATAB
i6[5] => o[5]~2.DATAB
i6[6] => o[6]~1.DATAB
i6[7] => o[7]~0.DATAB
i5[0] => o[0]~17.DATAB
i5[1] => o[1]~14.DATAB
i5[2] => o[2]~13.DATAB
i5[3] => o[3]~12.DATAB
i5[4] => o[4]~11.DATAB
i5[5] => o[5]~10.DATAB
i5[6] => o[6]~9.DATAB
i5[7] => o[7]~8.DATAB
i4[0] => o[0]~18.DATAB
i4[1] => o[1]~23.DATAB
i4[2] => o[2]~28.DATAB
i4[3] => o[3]~33.DATAB
i4[4] => o[4]~38.DATAB
i4[5] => o[5]~43.DATAB
i4[6] => o[6]~48.DATAB
i4[7] => o[7]~53.DATAB
i3[0] => o[0]~19.DATAB
i3[1] => o[1]~24.DATAB
i3[2] => o[2]~29.DATAB
i3[3] => o[3]~34.DATAB
i3[4] => o[4]~39.DATAB
i3[5] => o[5]~44.DATAB
i3[6] => o[6]~49.DATAB
i3[7] => o[7]~55.DATAB
i2[0] => o[0]~20.DATAB
i2[1] => o[1]~25.DATAB
i2[2] => o[2]~30.DATAB
i2[3] => o[3]~35.DATAB
i2[4] => o[4]~40.DATAB
i2[5] => o[5]~45.DATAB
i2[6] => o[6]~50.DATAB
i2[7] => o[7]~57.DATAB
i1[0] => o[0]~21.DATAB
i1[1] => o[1]~26.DATAB
i1[2] => o[2]~31.DATAB
i1[3] => o[3]~36.DATAB
i1[4] => o[4]~41.DATAB
i1[5] => o[5]~46.DATAB
i1[6] => o[6]~51.DATAB
i1[7] => o[7]~59.DATAB
i0[0] => o[0]~22.DATAB
i0[1] => o[1]~27.DATAB
i0[2] => o[2]~32.DATAB
i0[3] => o[3]~37.DATAB
i0[4] => o[4]~42.DATAB
i0[5] => o[5]~47.DATAB
i0[6] => o[6]~52.DATAB
i0[7] => o[7]~61.DATAB
s[0] => process0~9.IN1
s[0] => process0~7.IN1
s[0] => process0~1.IN1
s[0] => process0~4.IN1
s[1] => process0~9.IN0
s[1] => process0~4.IN0
s[1] => process0~1.IN0
s[1] => process0~7.IN0
s[2] => process0~11.IN1
s[2] => process0~8.IN0
s[2] => process0~5.IN0
s[2] => process0~2.IN0
s[2] => process0~0.IN0
s[2] => process0~3.IN0
s[2] => process0~6.IN0
s[2] => process0~10.IN1
o[0] <= o[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= o[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= o[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[4] <= o[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[5] <= o[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[6] <= o[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
o[7] <= o[7]$latch.DB_MAX_OUTPUT_PORT_TYPE


|fast_adder|adder:a
clock_50_mhz => buf[7].CLK
clock_50_mhz => buf[6].CLK
clock_50_mhz => buf[5].CLK
clock_50_mhz => buf[4].CLK
clock_50_mhz => buf[3].CLK
clock_50_mhz => buf[2].CLK
clock_50_mhz => buf[1].CLK
clock_50_mhz => buf[0].CLK
clock_50_mhz => int_len[31].CLK
clock_50_mhz => int_len[30].CLK
clock_50_mhz => int_len[29].CLK
clock_50_mhz => int_len[28].CLK
clock_50_mhz => int_len[27].CLK
clock_50_mhz => int_len[26].CLK
clock_50_mhz => int_len[25].CLK
clock_50_mhz => int_len[24].CLK
clock_50_mhz => int_len[23].CLK
clock_50_mhz => int_len[22].CLK
clock_50_mhz => int_len[21].CLK
clock_50_mhz => int_len[20].CLK
clock_50_mhz => int_len[19].CLK
clock_50_mhz => int_len[18].CLK
clock_50_mhz => int_len[17].CLK
clock_50_mhz => int_len[16].CLK
clock_50_mhz => int_len[15].CLK
clock_50_mhz => int_len[14].CLK
clock_50_mhz => int_len[13].CLK
clock_50_mhz => int_len[12].CLK
clock_50_mhz => int_len[11].CLK
clock_50_mhz => int_len[10].CLK
clock_50_mhz => int_len[9].CLK
clock_50_mhz => int_len[8].CLK
clock_50_mhz => int_len[7].CLK
clock_50_mhz => int_len[6].CLK
clock_50_mhz => int_len[5].CLK
clock_50_mhz => int_len[4].CLK
clock_50_mhz => int_len[3].CLK
clock_50_mhz => int_len[2].CLK
clock_50_mhz => int_len[1].CLK
clock_50_mhz => int_len[0].CLK
clock_50_mhz => read_address[2]~reg0.CLK
clock_50_mhz => read_address[1]~reg0.CLK
clock_50_mhz => read_address[0]~reg0.CLK
clock_50_mhz => output[11]~reg0.CLK
clock_50_mhz => output[10]~reg0.CLK
clock_50_mhz => output[9]~reg0.CLK
clock_50_mhz => output[8]~reg0.CLK
clock_50_mhz => output[7]~reg0.CLK
clock_50_mhz => output[6]~reg0.CLK
clock_50_mhz => output[5]~reg0.CLK
clock_50_mhz => output[4]~reg0.CLK
clock_50_mhz => output[3]~reg0.CLK
clock_50_mhz => output[2]~reg0.CLK
clock_50_mhz => output[1]~reg0.CLK
clock_50_mhz => output[0]~reg0.CLK
clock_50_mhz => cur_s~7.IN1
en => read_address~2.OUTPUTSELECT
en => read_address~1.OUTPUTSELECT
en => read_address~0.OUTPUTSELECT
en => cur_s~6.OUTPUTSELECT
en => cur_s~5.OUTPUTSELECT
en => cur_s~4.OUTPUTSELECT
en => cur_s~3.OUTPUTSELECT
en => cur_s~2.OUTPUTSELECT
en => cur_s~1.OUTPUTSELECT
en => cur_s~0.OUTPUTSELECT
en => buf[7].ENA
en => buf[6].ENA
en => buf[5].ENA
en => buf[4].ENA
en => buf[3].ENA
en => buf[2].ENA
en => buf[1].ENA
en => buf[0].ENA
en => int_len[31].ENA
en => int_len[30].ENA
en => int_len[29].ENA
en => int_len[28].ENA
en => int_len[27].ENA
en => int_len[26].ENA
en => int_len[25].ENA
en => int_len[24].ENA
en => int_len[23].ENA
en => int_len[22].ENA
en => int_len[21].ENA
en => int_len[20].ENA
en => int_len[19].ENA
en => int_len[18].ENA
en => int_len[17].ENA
en => int_len[16].ENA
en => int_len[15].ENA
en => int_len[14].ENA
en => int_len[13].ENA
en => int_len[12].ENA
en => int_len[11].ENA
en => int_len[10].ENA
en => int_len[9].ENA
en => int_len[8].ENA
en => int_len[7].ENA
en => int_len[6].ENA
en => int_len[5].ENA
en => int_len[4].ENA
en => int_len[3].ENA
en => int_len[2].ENA
en => int_len[1].ENA
en => int_len[0].ENA
en => output[11]~reg0.ENA
en => output[10]~reg0.ENA
en => output[9]~reg0.ENA
en => output[8]~reg0.ENA
en => output[7]~reg0.ENA
en => output[6]~reg0.ENA
en => output[5]~reg0.ENA
en => output[4]~reg0.ENA
en => output[3]~reg0.ENA
en => output[2]~reg0.ENA
en => output[1]~reg0.ENA
en => output[0]~reg0.ENA
en => cur_s.a.DATAIN
data_registerfile[0] => Selector7.IN6
data_registerfile[0] => Add0.IN8
data_registerfile[1] => Selector6.IN6
data_registerfile[1] => Add0.IN7
data_registerfile[2] => Selector5.IN6
data_registerfile[2] => Add0.IN6
data_registerfile[3] => Selector4.IN6
data_registerfile[3] => Add0.IN5
data_registerfile[4] => Selector3.IN6
data_registerfile[4] => Add0.IN4
data_registerfile[5] => Selector2.IN6
data_registerfile[5] => Add0.IN3
data_registerfile[6] => Selector1.IN6
data_registerfile[6] => Add0.IN2
data_registerfile[7] => Selector0.IN6
data_registerfile[7] => Add0.IN1
read_address[0] <= read_address[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_address[1] <= read_address[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_address[2] <= read_address[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[8] <= output[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[9] <= output[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[10] <= output[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[11] <= output[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE


